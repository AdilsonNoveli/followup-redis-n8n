version: "3.8"

services:
  followup:
    image: b2intro/followup:1.0.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          #- node.hostname == worker
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
    networks:
      - network_swarm
    environment:
      # URL do Redis para conexão. Ex.: redis://host:porta
      - REDIS_URL=redis://redis_followup:6379

      # Mapeamento de chaves para ações:
      #   Formato "chave=webhookUrl|canal"
      #   Se não houver webhookUrl, deixe antes do "|" vazio.
      #   Se não houver canal, deixe depois do "|" vazio.
      # Ex.: key01 dispara webhook e canal, key02 apenas canal
      - KEY_WEBHOOK_MAPPING=key01=https://webhook.dominio.com.br/webhook/followup01|redisChannel1,key02=|redisChannel2

      # Nome da fila utilizada pelo BullMQ para gerenciar os jobs
      - BULLMQ_QUEUE_NAME=webhookQueue
      # Canal onde o evento final de sucesso será publicado
      - SUCCESS_CHANNEL=success
      # Nome (ou valor) que será usado como "mensagem de falha" (caso queira personalizar)
      - FAILURE_MESSAGE=failure
      # Porta onde a aplicação (Express) roda internamente
      - PORT=3000
      # Define o canal que o subscriber escuta para receber callbacks (padrão "workflow_callback")
      - CALLBACK_CHANNEL=workflow_success
      # Número de tentativas (attempts) para cada job
      - BULLMQ_ATTEMPTS=5
      # Define o tipo de backoff ("fixed" ou "exponential")
      - BULLMQ_BACKOFF_TYPE=fixed
      # Tempo de espera (em ms) entre as tentativas de retry do job
      - BULLMQ_BACKOFF_DELAY=5000
      # Tempo de espera máximo (em ms) para receber o callback via Redis
      - WORKER_CALLBACK_TIMEOUT=300000 # = 5 minutos
      # Se true, Jobs concluídos com sucesso (status "completed") são automaticamente removidos do banco de dados
      - BULLMQ_REMOVE_ON_COMPLETE=true
      # Se true, Jobs que falham definitivamente (após esgotar as tentativas) são automaticamente removidos do banco de dados 
      - BULLMQ_REMOVE_ON_FAIL=true
      # Concurrency (quantos jobs podem ser processados em paralelo)
      - BULLMQ_CONCURRENCY=10
      # Ativa/desativa logs em nível debug (true = ativado, false = desativado)
      - DEBUG=false
networks:
  network_swarm:
    external: true
    name: network_swarm
